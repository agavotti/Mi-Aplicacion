{"version":3,"sources":["logo.svg","Components/Gen.js","Config/axios.js","Services/genServices.js","Pages/Home.js","Components/Menu.js","Components/Footer.js","Pages/DetalleGen.js","Components/Stat.js","Pages/Stats.js","Components/FormGroup.js","Pages/Login.js","Pages/Registro.js","Pages/AltaGen.js","Pages/NotFound.js","Routes/Public.js","App.js","reportWebVitals.js","index.js"],"names":["Gen","props","datos","className","ID","Dna","map","genesCadenas","to","axios","create","baseURL","getByID","id","instance","get","Home","useState","genes","setGenes","loading","setLoading","useEffect","then","response","data","catch","e","console","log","genVar","Menu","Footer","booleanToString","bool","String","DetalleGen","gen","setGen","useParams","request","a","EsMutante","moment","FechaAlta","format","Stat","CountHumantDNA","CountMutantDNA","Ratio","Stats","stats","setStats","FormGroup","label","type","register","Login","useForm","handleSubmit","errors","watch","formState","onSubmit","required","Email","minLength","Password","Registro","Nombre","Apellido","form","setForm","handleChange","name","target","value","preventDefault","onChange","AltaGen","Cadena1","Cadena2","Cadena3","Cadena4","Cadena5","Cadena6","limpiarForm","adn","dna","post","status","alert","pattern","NotFound","Public","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32a28b8a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {Link} from \"react-router-dom\"\r\n\r\nfunction Gen(props) {\r\n  const {datos} = props\r\n  //const datos = props.datos\r\n  return (\r\n    <div className=\"Detalle\" >\r\n     <p>ID: {datos.ID}</p>\r\n     <p>Genes: {datos.Dna.map(genesCadenas=><li>{genesCadenas}</li>)}</p>\r\n     <button className=\"btn btn-white\"><Link to={'/Gen/'+datos.ID} className='withe'>Ver Detalle Gen</Link></button>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Gen;\r\n","import axios from 'axios';\r\nexport default axios.create({\r\n    baseURL: 'https://cerebroxmenapi.azurewebsites.net/'\r\n});","import instance from \"../Config/axios\";\r\nexport function getAll() {\r\n  return instance.get(\"all\");\r\n}\r\nexport function getByID(id) {\r\n  return instance.get(\"mutant/\" + id);\r\n}\r\nexport function altaGen(dna) {\r\n  return instance.post(\"mutant\", {\r\n    Dna: dna\r\n    });\r\n}\r\nexport function getStats() {\r\n    return instance.get(\"/stats\");\r\n    // return fetch(\"https://cerebroxmenapi.azurewebsites.net/stats\",{\r\n    //     method:\"GET\",\r\n    //     mode:\"no-cors\",\r\n    // })\r\n    // .then(res=>res.json());\r\n}","\nimport React,{useState,useEffect} from 'react';\nimport Gen from '../Components/Gen';\nimport {getAll} from \"../Services/genServices\"\nfunction Home() {\n  const [genes,setGenes] = useState([])\n  const [loading,setLoading] = useState(true)\n\n  useEffect(\n    ()=>{\n      getAll()\n      .then(response=>{\n        if(response.data){\n          setLoading(false)\n          setGenes(response.data)\n          \n        }\n      })\n      .catch(e=>{\n        console.log(e)\n      })\n    },\n    []\n  )\n  if(loading){\n    return (\n      <div className=\"body\">\n        Cargando ...\n  \n      </div>\n    );\n  }else{\n    return (\n      <div className=\"body\">\n        {genes.map(genVar=><Gen datos={genVar} />)}\n      </div>\n    );\n  }\n  \n}\n\nexport default Home;\n","\r\nimport React from 'react';\r\nimport {Link} from \"react-router-dom\"\r\nfunction Menu() {\r\n  \r\n    return (\r\n      <div className='BordeMenu AncladoTop'>\r\n        <ul >\r\n          <li className='Menu'><Link to=\"/\">Inicio</Link></li>\r\n          <li className='Menu'><Link to=\"/Registro\">Registro</Link></li>\r\n          <li className='Menu'><Link to=\"/login\">Login</Link></li>\r\n          <li className='Menu'><Link to=\"/AltaGen\">AltaGen</Link></li>\r\n          <li className='Menu'><Link to=\"/stats\">Stats</Link></li>\r\n        </ul>\r\n  \r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default Menu;\r\n","\r\nimport React from 'react';\r\nimport {Link} from \"react-router-dom\"\r\nfunction Footer() {\r\n  \r\n    return (\r\n      <div className='AnclarBottom'>\r\n        Copyrigth ...\r\n  \r\n      </div>\r\n    );\r\n  \r\n  \r\n}\r\n\r\nexport default Footer;\r\n","\r\nimport React,{useState,useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\"\r\nimport {getByID} from \"../Services/genServices\"\r\nimport moment from 'moment'\r\nfunction DetalleGen() {\r\n  const [gen,setGen] = useState({})\r\n  const [loading,setLoading] = useState(true)\r\n  const {id} = useParams();\r\n  useEffect(\r\n    ()=>{\r\n      const request = async ()=>{\r\n        try{\r\n          const response = await getByID(id);\r\n          if(response.data){\r\n            setGen(response.data)\r\n            setLoading(false)\r\n          }\r\n        }catch(e){\r\n          console.log(e)\r\n        }\r\n      }\r\n      request()\r\n    },\r\n    [id]\r\n  )\r\n  if(loading){\r\n    return (\r\n      <div className=\"body detalle\">\r\n        Cargando ...\r\n  \r\n      </div>\r\n    );\r\n  }else{\r\n    return (\r\n      <div className=\"body detalle\">\r\n        <p>{gen.id}</p>\r\n        <p>{gen.Dna.map(genesCadenas=><li>{genesCadenas}</li>)}</p>\r\n        <p>Es Mutante: {booleanToString(gen.EsMutante)}</p>\r\n        <p>Fecha alta: {moment(gen.FechaAlta).format('DD/MM/YYYY HH:mm:SS')}</p>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\n\r\nfunction booleanToString(bool){\r\n  switch(bool){\r\n      case true: return \"Si\";\r\n      case false: return \"No\";\r\n      default: return String(bool);\r\n  }\r\n}\r\n\r\nexport default DetalleGen;\r\n","\r\nfunction Stat(props) {\r\n  const {datos} = props\r\n  //const datos = props.datos\r\n  return (\r\n    <div className=\"\" >\r\n     <p>Humanos: {datos.CountHumantDNA}</p>\r\n     <p>Mutantes: {datos.CountMutantDNA}</p>\r\n     <p>Ratio: {datos.Ratio}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Stat;\r\n","import React,{useState,useEffect} from 'react';\r\n\r\nimport Stat from '../Components/Stat';\r\nimport {getStats} from \"../Services/genServices\"\r\nfunction Stats() {\r\n  const [stats,setStats] = useState([])\r\n  const [loading,setLoading] = useState(true)\r\n\r\n\r\n  useEffect(\r\n    ()=>{\r\n      const request = async ()=>{\r\n        try{\r\n          const response = await getStats()\r\n          if(response.data){\r\n            setStats(response.data)\r\n            setLoading(false)\r\n          }\r\n        }catch(e){\r\n          console.log(e)\r\n        }\r\n      }\r\n      request()\r\n    },\r\n    []\r\n  )\r\n  if(loading){\r\n    return (\r\n      <div className=\"body\">\r\n        Cargando ...\r\n  \r\n      </div>\r\n    );\r\n  }else{\r\n    return (\r\n      <div className=\"body\">\r\n        {<Stat datos={stats} />}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Stats;\r\n","\r\nimport React from 'react';\r\nfunction FormGroup(props) {\r\n    const {label,type,register} = props\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <input type={type || \"text\"} {...register} />\r\n        </div>\r\n    );\r\n}\r\nexport default FormGroup;\r\n","\r\nimport React, {useState} from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport FormGroup from '../Components/FormGroup';\r\n\r\nfunction Login() {\r\n  const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n  const onSubmit = data => console.log(data);\r\n\r\n    return (\r\n      <div className=\"body\">\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <FormGroup label=\"Email\" type=\"email\" register={{...register(\"Email\",{required:true})}} />\r\n        {errors.Email && <span>Es necesario un mail</span>}\r\n        <FormGroup label=\"Password\" type=\"password\" register={{...register(\"Password\",{required:true,minLength:6})}} />\r\n        {errors.Password?.type===\"required\" &&  <div>El campo Contraseña es obligatorio</div>}\r\n        {errors.Password?.type===\"minLength\" &&  <div>Debe completar al menos 6 caracteres</div>}\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n    );\r\n  \r\n  \r\n}\r\n\r\nexport default Login;\r\n","\r\nimport React, {useState} from 'react';\r\n\r\nfunction Registro() {\r\n  \r\n  const [form, setForm] = useState({Nombre:'', Apellido:'', Email:'', Password:''});\r\n  const handleSubmit = (e) => { \r\n    console.log(\"handleSubmit\", form)\r\n    e.preventDefault();\r\n  }\r\n  const handleChange = (e) => {\r\n  const name = e.target.name;\r\n  const value = e.target.value;\r\n  console.log(\"handleChange\", name, value)\r\n  setForm({...form, [name]: value});\r\n  }\r\n    return (\r\n      <div className=\"body\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label>Nombre:</label>\r\n            <input type=\"text\" name=\"Nombre\" value={form.Nombre} onChange={handleChange} />\r\n          </div>\r\n          <div>\r\n            <label>Apellido:</label>\r\n            <input type=\"text\" name=\"Apellido\" value={form.Apellido} onChange={handleChange} />\r\n          </div>\r\n          <div>\r\n            <label>Email:</label>\r\n            <input type=\"text\" name=\"Email\" value={form.Email} onChange={handleChange} />\r\n          </div>\r\n          <div>\r\n            <label>Password:</label>\r\n            <input type=\"password\" name=\"Password\" value={form.Password} onChange={handleChange} />\r\n          </div>\r\n          <button type=\"submit\">Registrar</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  \r\n  \r\n}\r\n\r\nexport default Registro;\r\n","\r\nimport React, {useState} from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport FormGroup from '../Components/FormGroup';\r\nimport {altaGen} from \"../Services/genServices\"\r\n\r\nfunction AltaGen() \r\n{\r\n  const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n  const onSubmit = data => {\r\n    console.log(data);\r\n    var adn = [data.Cadena1, data.Cadena2, data.Cadena3, data.Cadena4, data.Cadena5, data.Cadena6];\r\n    request(adn);\r\n  }\r\n  const [form, setForm] = useState({Cadena1:'', Cadena2:'', Cadena3:'', Cadena4:'', Cadena5:'', Cadena6:''});\r\n  function limpiarForm(){\r\n    setForm({Cadena1:'', Cadena2:'', Cadena3:'', Cadena4:'', Cadena5:'', Cadena6:''});\r\n  }\r\n  \r\n  // const [form, setForm] = useState({Cadena1:'', Cadena2:'', Cadena3:'', Cadena4:'', Cadena5:'', Cadena6:''});\r\n  // const handleSubmit = (e) => { \r\n  //   console.log(\"handleSubmit\", form)\r\n  //   var adn = [form.Cadena1, form.Cadena2, form.Cadena3, form.Cadena4, form.Cadena5, form.Cadena6];\r\n  //   request(adn);\r\n  //   e.preventDefault();\r\n  // }\r\n\r\n  // const handleChange = (e) => \r\n  // {\r\n  //   const name = e.target.name;\r\n  //   const value = e.target.value;\r\n  //   console.log(name, value);\r\n  //   var acidosUpper = value.toUpperCase();\r\n  //   var cadenaRestante = ValidarAcidos(acidosUpper);\r\n  //   if(cadenaRestante.length === 0)\r\n  //   {\t\r\n  //     setForm({...form, [name]: acidosUpper});\r\n  //   }\r\n  //   else  \r\n  //   {\r\n  //     alert(\"Acido no valido. Solo se permiten los siguientes caracteres: C, T, G, A\");\r\n  //   }\r\n  // }\r\n  const request = async (adn)=>{\r\n      try{\r\n        console.log(\"request\", adn);\r\n        const response = await altaGen(adn);\r\n        if(response.status === 200){\r\n          alert(\"Gen creado. Es mutante\");\r\n          limpiarForm();\r\n        }\r\n        else{\r\n          alert(\"status: \" + response.status);\r\n        }\r\n      }catch(e){\r\n        if(e.response.status === 403){\r\n          alert(\"Gen creado. Es humano\");\r\n          limpiarForm();\r\n        }\r\n        else alert(\"error: \" + e.response.status);\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"body\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className='CargaGen'>\r\n            <label>Genes:</label>\r\n            <FormGroup register={{...register(\"Cadena1\",{required:true,pattern:/([A]|[G]|[C]|[T]){6}/})}} />\r\n            {errors.Cadena1?.type===\"required\" &&  <div>El campo es obligatorio</div>}\r\n            {errors.Cadena1?.type===\"pattern\" &&  <div>Caracteres permitidos A, C, G y T</div>} \r\n            <FormGroup register={{...register(\"Cadena2\",{required:true,pattern: /([A]|[G]|[C]|[T]){6}/})}} />\r\n            {errors.Cadena2?.type===\"required\" &&  <div>El campo es obligatorio</div>}\r\n            {errors.Cadena2?.type===\"pattern\" &&  <div>Caracteres permitidos A, C, G y T</div>} \r\n            <FormGroup register={{...register(\"Cadena3\",{required:true,pattern:/([A]|[G]|[C]|[T]){6}/})}} />\r\n            {errors.Cadena3?.type===\"required\" &&  <div>El campo es obligatorio</div>}\r\n            {errors.Cadena3?.type===\"pattern\" &&  <div>Caracteres permitidos A, C, G y T</div>} \r\n            <FormGroup register={{...register(\"Cadena4\",{required:true,pattern:/([A]|[G]|[C]|[T]){6}/})}} />\r\n            {errors.Cadena4?.type===\"required\" &&  <div>El campo es obligatorio</div>}\r\n            {errors.Cadena4?.type===\"pattern\" &&  <div>Caracteres permitidos A, C, G y T</div>} \r\n            <FormGroup register={{...register(\"Cadena5\",{required:true,pattern:/([A]|[G]|[C]|[T]){6}/})}} />\r\n            {errors.Cadena5?.type===\"required\" &&  <div>El campo es obligatorio</div>}\r\n            {errors.Cadena5?.type===\"pattern\" &&  <div>Caracteres permitidos A, C, G y T</div>} \r\n            <FormGroup register={{...register(\"Cadena6\",{required:true,pattern:/([A]|[G]|[C]|[T]){6}/})}} />\r\n            {errors.Cadena6?.type===\"required\" &&  <div>El campo es obligatorio</div>}\r\n            {errors.Cadena6?.type===\"pattern\" &&  <div>Caracteres permitidos A, C, G y T</div>} \r\n            {/* <input className='CargaGen' type=\"text\" title='Cadena1' name=\"Cadena1\" minLength={6} maxLength={6} value={form.Cadena1} onChange={handleChange} />\r\n            <input className='CargaGen' type=\"text\" title='Cadena2' name=\"Cadena2\" minLength={6} maxLength={6} value={form.Cadena2} onChange={handleChange} />\r\n            <input className='CargaGen' type=\"text\" title='Cadena3' name=\"Cadena3\" minLength={6} maxLength={6} value={form.Cadena3} onChange={handleChange} />\r\n            <input className='CargaGen' type=\"text\" title='Cadena4' name=\"Cadena4\" minLength={6} maxLength={6} value={form.Cadena4} onChange={handleChange} />\r\n            <input className='CargaGen' type=\"text\" title='Cadena5' name=\"Cadena5\" minLength={6} maxLength={6} value={form.Cadena5} onChange={handleChange} />\r\n            <input className='CargaGen' type=\"text\" title='Cadena6' name=\"Cadena6\" minLength={6} maxLength={6} value={form.Cadena6} onChange={handleChange} /> */}\r\n          </div>\r\n          <button type=\"submit\"className=\"btn btn-white white\">Registrar Gen</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  \r\n  \r\n}\r\n\r\n// function ValidarAcidos(cadena){\r\n//   cadena = cadena.replaceAll('C','');\r\n//   cadena = cadena.replaceAll('T','');\r\n//   cadena = cadena.replaceAll('G','');\r\n//   cadena = cadena.replaceAll('A','');\r\n//   return cadena;\r\n// }\r\n\r\n\r\nexport default AltaGen;\r\n","import React from 'react';\r\n\r\nfunction NotFound() {\r\n    return (\r\n      <div className=\"body\">\r\n        <h1>404</h1>\r\n        <h2>Página no encontrada</h2>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;\r\n","import Home from '../Pages/Home';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route\r\n  } from \"react-router-dom\"\r\nimport Menu from '../Components/Menu';\r\nimport Footer from '../Components/Footer';\r\nimport DetalleGen from '../Pages/DetalleGen';\r\nimport Stats from '../Pages/Stats';\r\nimport Login from '../Pages/Login';\r\nimport React from 'react'; \r\nimport Registro from '../Pages/Registro';\r\nimport AltaGen from '../Pages/AltaGen';\r\nimport NotFound from '../Pages/NotFound';\r\n\r\nfunction Public() {\r\n    return (\r\n        <Router>\r\n            <Menu />\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home />} />\r\n                <Route path=\"/Mi-Aplicacion\" element={<Home />} />\r\n                <Route path=\"/registro\" element={<Registro />} />\r\n                <Route path=\"/login\" element={<Login />} />\r\n                <Route path=\"/AltaGen\" element={<AltaGen />} />\r\n                <Route path=\"/Gen/:id\" element={<DetalleGen />} />\r\n                <Route path=\"/stats\" element={<Stats />} />\r\n\r\n\r\n                <Route path=\"/*\" element={<NotFound />} />\r\n            </Routes>\r\n            <Footer />\r\n        </Router>\r\n    );\r\n}  \r\n\r\nexport default Public;","import logo from './logo.svg';\nimport './App.css';\nimport React,{useState,useReducer} from 'react';\nimport Public from './Routes/Public';\n\nfunction App() {\n  const [mensaje,setMensaje] = useState('')\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Public />\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}